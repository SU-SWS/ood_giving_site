// This file was generated by the storyblok CLI.
// DO NOT MODIFY THIS FILE BY HAND.
import type { ISbStoryData } from "storyblok";
export interface AccordionStoryblok {
  spacingTop?: number | string;
  spacingBottom?: number | string;
  headingLevel?: number | string;
  id?: string;
  title?: string;
  accordionItems?: AccordionItemStoryblok[];
  accordionColor?: "palo-alto-light" | "digital-red";
  component: "accordion";
  _uid: string;
  [k: string]: any;
}

export interface RichtextStoryblok {
  type: string;
  content?: RichtextStoryblok[];
  marks?: RichtextStoryblok[];
  attrs?: any;
  text?: string;
  [k: string]: any;
}

export interface AccordionItemStoryblok {
  title?: string;
  id?: string;
  headingLevel?: number | string;
  content?: RichtextStoryblok;
  component: "accordionItem";
  _uid: string;
  [k: string]: any;
}

export type MultilinkStoryblok =
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      anchor?: string;
      rel?: string;
      title?: string;
      prep?: string;
      linktype: "story";
      story?: {
        name: string;
        created_at?: string;
        published_at?: string;
        id: number;
        uuid: string;
        content?: {
          [k: string]: any;
        };
        slug: string;
        full_slug: string;
        sort_by_date?: null | string;
        position?: number;
        tag_list?: string[];
        is_startpage?: boolean;
        parent_id?: null | number;
        meta_data?: null | {
          [k: string]: any;
        };
        group_id?: string;
        first_published_at?: string;
        release_id?: null | number;
        lang?: string;
        path?: null | string;
        alternates?: any[];
        default_full_slug?: null | string;
        translated_slugs?: null | any[];
        [k: string]: any;
      };
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      linktype: "url";
      rel?: string;
      title?: string;
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      email?: string;
      linktype: "email";
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      linktype: "asset";
      [k: string]: any;
    };

export interface AlertStoryblok {
  label: string;
  fontAwesomeIcon: number | string;
  backgroundColor: "light-grey" | "yellow" | "blue" | "green" | "red";
  alertBodyText: RichtextStoryblok;
  ctaText?: string;
  cta?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "alert";
  _uid: string;
  [k: string]: any;
}

export interface AlertPickerStoryblok {
  alert?: (ISbStoryData<AlertStoryblok> | string)[];
  component: "alertPicker";
  _uid: string;
  [k: string]: any;
}

export interface AssetStoryblok {
  alt: string | null;
  copyright?: string | null;
  fieldtype: "asset";
  id: number;
  filename: string | null;
  name: string;
  title: string | null;
  focus: string | null;
  meta_data?: {
    [k: string]: any;
  };
  source?: string | null;
  is_external_url?: boolean;
  is_private?: boolean;
  src?: string;
  updated_at?: string;
  width?: number | null;
  height?: number | null;
  aspect_ratio?: number | null;
  public_id?: string | null;
  content_type?: string;
  [k: string]: any;
}

export interface BasicCardStoryblok {
  orientation?: "" | "horizontal";
  largeHeading?: boolean;
  isSansHeading?: boolean;
  largeCardPadding?: boolean;
  backgroundColor?: number | string;
  textAlign?: number | string;
  headingLevel?: number | string;
  image?: AssetStoryblok;
  showImage?: boolean;
  imageAspectRatio?: "1x1" | "3x2";
  visibleHorizontal?: number | string;
  superheadline?: string;
  headline?: string;
  content?: RichtextStoryblok;
  ctaLink?: CtaLinkStoryblok[];
  visibleVertical?: number | string;
  component: "basicCard";
  _uid: string;
  [k: string]: any;
}

export interface ColumnGridStoryblok {
  oneColumnMd?: boolean;
  columnOneContent?: (
    | OodTileCardStoryblok
    | OodIconCardStoryblok
    | BasicCardStoryblok
    | SingleColumnContentStoryblok
    | CtaLinkStoryblok
  )[];
  columnTwoContent?: (
    | OodTileCardStoryblok
    | OodIconCardStoryblok
    | BasicCardStoryblok
    | SingleColumnContentStoryblok
    | CtaLinkStoryblok
  )[];
  columnThreeContent?: (
    | OodTileCardStoryblok
    | OodIconCardStoryblok
    | BasicCardStoryblok
    | SingleColumnContentStoryblok
    | CtaLinkStoryblok
  )[];
  component: "columnGrid";
  _uid: string;
  [k: string]: any;
}

export interface ContentMenuParentItemStoryblok {
  parentItemText?: string;
  parentItemLink?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  nestedMenu?: ContentNestedMenuStoryblok[];
  component: "contentMenuParentItem";
  _uid: string;
  [k: string]: any;
}

export interface ContentMenuPickerStoryblok {
  contentMenu?: (ISbStoryData<OodContentMenuStoryblok> | string)[];
  component: "contentMenuPicker";
  _uid: string;
  [k: string]: any;
}

export interface ContentNavItemStoryblok {
  linkText?: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "contentNavItem";
  _uid: string;
  [k: string]: any;
}

export interface ContentNestedMenuStoryblok {
  menuItems?: (ContentMenuParentItemStoryblok | ContentNavItemStoryblok)[];
  menuLevel?: "" | "lv2" | "lv3";
  component: "contentNestedMenu";
  _uid: string;
  [k: string]: any;
}

export interface CountdownStoryblok {
  hasDays?: boolean;
  date?: string;
  hourPieRange?: string;
  dayPieRange: string;
  isDST?: boolean;
  component: "countdown";
  _uid: string;
  [k: string]: any;
}

export interface CountdownPickerStoryblok {
  countdown?: (ISbStoryData<CountdownStoryblok> | string)[];
  component: "countdownPicker";
  _uid: string;
  [k: string]: any;
}

export interface CtaGroupStoryblok {
  display?: "inline-block" | "block";
  ctaLinks?: CtaLinkStoryblok[];
  component: "ctaGroup";
  _uid: string;
  [k: string]: any;
}

export interface CtaLinkStoryblok {
  linkText?: string;
  srText?: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"}>;
  linkIcon?: number | string;
  linkTextColor?:
    | "su-text-digital-red su-after-bg-digital-red su-text-hocus-plum-dark su-after-bg-hocus-plum-dark"
    | "su-text-white su-text-hocus-white su-hocus-underline su-after-bg-white su-after-bg-hocus-white"
    | "ood-cta__link-gradient su-bg-sky-dark-to-bay-dark su-after-bg-sky-dark-to-bay-dark"
    | "ood-cta__link-gradient su-bg-cardinal-dark-to-spirited-dark su-after-bg-cardinal-dark-to-spirited-dark"
    | "ood-cta__link-gradient su-bg-plum-to-digital-red su-after-bg-plum-to-digital-red"
    | "ood-cta__link-gradient su-bg-plum-to-spirited-dark su-after-bg-plum-to-spirited-dark"
    | "ood-cta__link-gradient su-bg-palo-alto-dark-to-palo-verde-dark su-after-bg-palo-alto-dark-to-palo-verde-dark"
    | "ood-cta__link-gradient su-bg-sky-dark-to-olive-dark su-after-bg-sky-dark-to-olive-dark"
    | "su-text-lagunita-dark su-after-bg-lagunita-dark su-text-hocus-plum-dark su-after-bg-hocus-plum-dark"
    | "su-text-palo-verde su-after-bg-palo-verde su-text-hocus-plum-dark su-after-bg-hocus-plum-dark"
    | "su-text-plum su-after-bg-plum su-text-hocus-plum-dark su-after-bg-hocus-plum-dark"
    | "su-text-brick su-after-bg-brick su-text-hocus-plum-dark su-after-bg-hocus-plum-dark"
    | "su-text-cardinal-red su-after-bg-cardinal-red su-text-hocus-plum-dark su-after-bg-hocus-plum-dark"
    | "su-text-palo-alto su-after-bg-palo-alto su-text-hocus-plum-dark su-after-bg-hocus-plum-dark"
    | "su-text-bay-dark su-after-bg-bay-dark su-text-hocus-plum-dark su-after-bg-hocus-plum-dark"
    | "su-text-sky-dark su-after-bg-sky-dark su-text-hocus-plum-dark su-after-bg-hocus-plum-dark"
    | "su-text-lagunita su-after-bg-lagunita su-text-hocus-plum-dark su-after-bg-hocus-plum-dark";
  isButton?: boolean;
  linkButtonStyle?: number | string;
  linkButtonSize?: "" | "ood-cta__button--medium" | "ood-cta__button--large";
  align?: "";
  rel?: string;
  component: "ctaLink";
  _uid: string;
  [k: string]: any;
}

export interface CuratedStoriesStoryblok {
  featuredStories?: (StoryPickerStoryblok | OodStoryCardStoryblok)[];
  layout?: "2" | "3";
  otherStories?: (OodStoryCardStoryblok | StoryPickerStoryblok)[];
  ctaLink?: CtaLinkStoryblok[];
  component: "curatedStories";
  _uid: string;
  [k: string]: any;
}

export interface EmbedScriptStoryblok {
  script?: string;
  component: "embedScript";
  _uid: string;
  [k: string]: any;
}

export interface EmbedVideoStoryblok {
  videoUrl: string;
  caption?: RichtextStoryblok;
  videoWidth?: "story" | "site" | "inset" | "fit-parent";
  aspectRatio?: "16x9" | "4x3" | "1x1";
  spacingTop?: number | string;
  spacingBottom?: number | string;
  captionAlign?: number | string;
  startMinute?: string;
  startSecond?: string;
  component: "embedVideo";
  _uid: string;
  [k: string]: any;
}

export interface EndowedPositionsSearchStoryblok {
  component: "endowedPositionsSearch";
  _uid: string;
  [k: string]: any;
}

export interface EndowedPositionsSearchPickerStoryblok {
  endowedPositionsSearch?: (ISbStoryData<EndowedPositionsSearchStoryblok> | string)[];
  component: "endowedPositionsSearchPicker";
  _uid: string;
  [k: string]: any;
}

export interface GlobalFooterStoryblok {
  color?: "" | "su-global-footer--bright" | "su-global-footer--dark";
  component: "globalFooter";
  _uid: string;
  [k: string]: any;
}

export interface GlobalFooterPickerStoryblok {
  globalFooter?: (ISbStoryData<GlobalFooterStoryblok> | string)[];
  component: "globalFooterPicker";
  _uid: string;
  [k: string]: any;
}

export interface GridThreeColumnsStoryblok {
  gridContent?: OodSupportCardStoryblok[];
  component: "gridThreeColumns";
  _uid: string;
  [k: string]: any;
}

export interface LocalFooterPickerStoryblok {
  localFooter?: (ISbStoryData<OodLocalFooterStoryblok> | string)[];
  component: "localFooterPicker";
  _uid: string;
  [k: string]: any;
}

export interface LocalHeaderPickerStoryblok {
  localHeader?: (ISbStoryData<OodLocalHeaderStoryblok> | string)[];
  component: "localHeaderPicker";
  _uid: string;
  [k: string]: any;
}

export interface LockupStoryblok {
  lineOne: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "lockup";
  _uid: string;
  [k: string]: any;
}

export interface NavItemStoryblok {
  linkTextLabel?: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  linkClass?: "";
  component: "navItem";
  _uid: string;
  [k: string]: any;
}

export interface OodCampaignCardStoryblok {
  headlineColor?: number | string;
  headingLevel?: number | string;
  image?: AssetStoryblok;
  showImage?: boolean;
  visibleHorizontal?: number | string;
  visibleVertical?: number | string;
  superheadline?: string;
  headline: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  description?: string;
  component: "oodCampaignCard";
  _uid: string;
  [k: string]: any;
}

export interface OodCampaignHeaderStoryblok {
  lockup?: LockupStoryblok[];
  headerColor?: "su-text-white" | "su-text-black";
  logoImage?: AssetStoryblok;
  logoLink?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  homeLink?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  hideHomeLink?: boolean;
  component: "oodCampaignHeader";
  _uid: string;
  [k: string]: any;
}

export interface OodCampaignImpactStoryblok {
  items?: OodCampaignImpactItemStoryblok[];
  component: "oodCampaignImpact";
  _uid: string;
  [k: string]: any;
}

export interface OodCampaignImpactItemStoryblok {
  percent: string;
  description: string;
  graph_line_color?: number | string;
  component: "oodCampaignImpactItem";
  _uid: string;
  [k: string]: any;
}

export interface OodCampaignPageStoryblok {
  campaignHeaderGroup?: any;
  noindex?: boolean;
  heroTitleFontSerif?: boolean;
  heroIntroFontSerif?: boolean;
  oodCampaignHeader?: OodCampaignHeaderStoryblok[];
  heroStyle?: "fullwidth-image" | "left-image";
  heroImage?: any;
  image?: AssetStoryblok;
  visibleHorizontal?: number | string;
  campaignLogo?: any;
  logo?: AssetStoryblok;
  logoAlignment?: "su-mr-auto" | "su-ml-auto" | "su-mx-auto";
  heroContent?: any;
  heroBgColor?: number | string;
  heroContentColor?: "text-white" | "text-black";
  heroContentPosition?: "right" | "left" | "center";
  heroContentAlignment?: "su-text-align-left" | "su-text-align-center" | "su-text-align-right";
  heroTitleType?: "su-mod-type-4" | "su-mod-type-6";
  heroContentBar?: any;
  bar?: boolean;
  barBgColor?: number | string;
  barAlignment?: "su-mr-auto" | "su-ml-auto" | "su-mx-auto";
  heroCta?: CtaLinkStoryblok[];
  title: string;
  intro?: string;
  content?: (
    | StoryImageStoryblok
    | SectionStoryblok
    | OodPosterStoryblok
    | OodGallerySlideshowStoryblok
    | BasicCardStoryblok
  )[];
  iconCardHeading?: string;
  iconCards?: OodIconCardStoryblok[];
  localFooter?: LocalFooterPickerStoryblok[];
  globalFooter?: GlobalFooterPickerStoryblok[];
  canonicalURL?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  alertPicker?: AlertPickerStoryblok[];
  component: "oodCampaignPage";
  _uid: string;
  [k: string]: any;
}

export interface OodContentMenuStoryblok {
  menuTitle?: string;
  menuLinks?: (ContentMenuParentItemStoryblok | ContentNavItemStoryblok)[];
  relatedMenuTitle?: string;
  relatedMenuLinks?: (ContentMenuParentItemStoryblok | ContentNavItemStoryblok)[];
  component: "oodContentMenu";
  _uid: string;
  [k: string]: any;
}

export interface OodGallerySlideStoryblok {
  caption?: RichtextStoryblok;
  image?: AssetStoryblok;
  component: "oodGallerySlide";
  _uid: string;
  [k: string]: any;
}

export interface OodGallerySlideshowStoryblok {
  ariaLabel?: string;
  slides?: OodGallerySlideStoryblok[];
  showCounter?: boolean;
  showExpandLink?: boolean;
  containerWidth: "constrain-max-width" | "fit-container";
  spacingTop?: number | string;
  spacingBottom?: number | string;
  backgroundColor?: number | string;
  component: "oodGallerySlideshow";
  _uid: string;
  [k: string]: any;
}

export interface OodHomepageHeroStoryblok {
  image?: AssetStoryblok;
  visibleVertical?: number | string;
  visibleHorizontal?: number | string;
  splashTextSize?: "9" | "8";
  tabColor?: number | string;
  ctaBackgroundColor?: number | string;
  backgroundColor?: "bg-fog-light" | "bg-white";
  splashText?: string;
  ctaHeadline?: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  ctaText?: string;
  component: "oodHomepageHero";
  _uid: string;
  [k: string]: any;
}

export interface OodIconCardStoryblok {
  headline?: string;
  extraIcon?: string;
  iconStyle?: "fas" | "far";
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"}>;
  contentAlign?: number | string;
  backgroundColor?: "white" | "lagunita";
  headingLevel?: number | string;
  component: "oodIconCard";
  _uid: string;
  [k: string]: any;
}

export interface OodInteriorPageStoryblok {
  headerGroup?: any;
  noindex?: boolean;
  headerStyle?: "no-image" | "has-image" | "minimal" | "full-width-image";
  headerBackgroundColor?: number | string;
  headerImage?: AssetStoryblok;
  visibleVertical?: number | string;
  headerLogo?: AssetStoryblok;
  headerSpacingBottom?: number | string;
  layout?: "no-sidebar" | "left-sidebar";
  title?: string;
  intro?: RichtextStoryblok;
  belowContent?: (
    | SectionStoryblok
    | OodPosterStoryblok
    | BasicCardStoryblok
    | StoryImageStoryblok
    | EmbedScriptStoryblok
    | OodGallerySlideshowStoryblok
  )[];
  iconCardHeading?: string;
  iconCards?: OodIconCardStoryblok[];
  localHeader?: LocalHeaderPickerStoryblok[];
  localFooter?: LocalFooterPickerStoryblok[];
  globalFooter?: GlobalFooterPickerStoryblok[];
  bodyTitle?: string;
  pageContent?: (
    | EmbedScriptStoryblok
    | StoryImageStoryblok
    | AccordionStoryblok
    | SectionStoryblok
    | SingleColumnContentStoryblok
    | SearchResultsStoryblok
    | EmbedVideoStoryblok
    | OodGallerySlideshowStoryblok
  )[];
  contentMenu?: ContentMenuPickerStoryblok[];
  contactInfo?: BasicCardStoryblok[];
  aboveContent?: (
    | SectionStoryblok
    | OodPosterStoryblok
    | StoryImageStoryblok
    | BasicCardStoryblok
    | OodGallerySlideshowStoryblok
  )[];
  canonicalURL?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  alertPicker?: AlertPickerStoryblok[];
  component: "oodInteriorPage";
  _uid: string;
  [k: string]: any;
}

export interface OodLandingPageStoryblok {
  iconCardHeading?: string;
  iconCards?: OodIconCardStoryblok[];
  heroSection?: OodHomepageHeroStoryblok[];
  title?: string;
  localHeader?: LocalHeaderPickerStoryblok[];
  localFooter?: LocalFooterPickerStoryblok[];
  globalFooter?: GlobalFooterPickerStoryblok[];
  sections?: (SectionStoryblok | OodPosterStoryblok | BasicCardStoryblok | OodGallerySlideshowStoryblok)[];
  alertPicker?: AlertPickerStoryblok[];
  noindex?: boolean;
  component: "oodLandingPage";
  _uid: string;
  [k: string]: any;
}

export interface OodLocalFooterStoryblok {
  websiteLogo?: LockupStoryblok[];
  contactHeading?: string;
  contactInfoGroup?: any;
  addressLine1?: string;
  addressLine2?: string;
  addressLine3?: string;
  phone?: string;
  email?: string;
  taxId?: string;
  cta?: CtaLinkStoryblok[];
  headingGroupOod?: string;
  linkGroupOod?: NavItemStoryblok[];
  headingGroupGift?: string;
  linkGroupGift?: NavItemStoryblok[];
  headingGroupInfo?: string;
  linkGroupInfo?: NavItemStoryblok[];
  component: "oodLocalFooter";
  _uid: string;
  [k: string]: any;
}

export interface OodLocalHeaderStoryblok {
  lockup?: LockupStoryblok[];
  topBarColor?: "cardinal-red" | "digital-red" | "dark";
  subMenu?: OodSubMenuStoryblok[];
  megaMenu?: OodMegaMenuStoryblok[];
  component: "oodLocalHeader";
  _uid: string;
  [k: string]: any;
}

export interface OodMegaMenuStoryblok {
  topLevelLinks?: (OodMegaMenuSectionStoryblok | OodMegaMenuNavItemStoryblok)[];
  component: "oodMegaMenu";
  _uid: string;
  [k: string]: any;
}

export interface OodMegaMenuCardStoryblok {
  image?: AssetStoryblok;
  headline?: string;
  ctaText?: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  backgroundColor?: number | string;
  component: "oodMegaMenuCard";
  _uid: string;
  [k: string]: any;
}

export interface OodMegaMenuLinkGroupStoryblok {
  heading?: string;
  links?: OodMegaMenuNavItemStoryblok[];
  component: "oodMegaMenuLinkGroup";
  _uid: string;
  [k: string]: any;
}

export interface OodMegaMenuNavItemStoryblok {
  linkText?: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "oodMegaMenuNavItem";
  _uid: string;
  [k: string]: any;
}

export interface OodMegaMenuSectionStoryblok {
  linkText?: string;
  linkGroups?: OodMegaMenuLinkGroupStoryblok[];
  card?: OodMegaMenuCardStoryblok[];
  sectionCtaLink?: CtaLinkStoryblok[];
  component: "oodMegaMenuSection";
  _uid: string;
  [k: string]: any;
}

export interface OodPosterStoryblok {
  image?: AssetStoryblok;
  visibleVertical?: number | string;
  overlay?: "su-gradient-black-top" | "su-gradient-black-bottom" | "";
  cardBackgroundColor?: number | string;
  cardPosition?: "left" | "right";
  backgroundColor?: number | string;
  headingLevel?: number | string;
  headline?: string;
  bodyText?: RichtextStoryblok;
  ctaLink?: CtaLinkStoryblok[];
  component: "oodPoster";
  _uid: string;
  [k: string]: any;
}

export interface OodQuoteCardStoryblok {
  quoteText?: RichtextStoryblok;
  imageShape?: "square" | "round";
  borderColor?: number | string;
  forSliderOnly?: any;
  quoteSource?: RichtextStoryblok;
  smallText?: boolean;
  textAlign?: "text-align-center" | "text-align-left";
  backgroundColor?: "bg-white";
  quotationMarkColor?: "palo-verde-light" | "lagunita" | "cardinal-red" | "bay";
  image?: AssetStoryblok;
  showImage?: "";
  visibleHorizontal?: "h-left" | "h-center" | "h-right";
  visibleVertical?: "v-top" | "v-center" | "v-bottom";
  component: "oodQuoteCard";
  _uid: string;
  [k: string]: any;
}

export interface OodQuoteSliderStoryblok {
  quotes?: (ISbStoryData<OodQuoteCardStoryblok> | string)[];
  component: "oodQuoteSlider";
  _uid: string;
  [k: string]: any;
}

export interface OodStoryStoryblok {
  shortTitle?: string;
  teaser?: string;
  cardImage?: AssetStoryblok;
  title?: string;
  intro?: string;
  heroImageGroup?: any;
  heroImage?: AssetStoryblok;
  displayImage?: "show-image" | "hide-image";
  visibleVertical?: number | string;
  headerStylesGroup?: any;
  headerBoxColor?: number | string;
  tabColor?: number | string;
  headerBackgroundColor?: number | string;
  publishingInfoGroup?: any;
  author?: string;
  publishedDate?: string;
  manualDate?: string;
  belowContent?: (SectionStoryblok | BasicCardStoryblok | OodPosterStoryblok)[];
  iconCardHeading?: string;
  iconCards?: OodIconCardStoryblok[];
  localHeader?: LocalHeaderPickerStoryblok[];
  localFooter?: LocalFooterPickerStoryblok[];
  globalFooter?: GlobalFooterPickerStoryblok[];
  storyContent?: (
    | SingleColumnContentStoryblok
    | StoryImageStoryblok
    | SectionStoryblok
    | EmbedVideoStoryblok
    | OodGallerySlideshowStoryblok
  )[];
  cta?: CtaLinkStoryblok[];
  canonicalURL?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  alertPicker?: AlertPickerStoryblok[];
  noindex?: boolean;
  component: "oodStory";
  _uid: string;
  [k: string]: any;
}

export interface OodStoryCardStoryblok {
  image?: AssetStoryblok;
  showImage?: boolean;
  orientation?: "" | "horizontal";
  backgroundColor?: number | string;
  headingLevel?: number | string;
  headline?: string;
  teaser?: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  visibleHorizontal?: number | string;
  visibleVertical?: number | string;
  component: "oodStoryCard";
  _uid: string;
  [k: string]: any;
}

export interface OodSubMenuStoryblok {
  menuLinkItems: NavItemStoryblok[];
  ctaLink?: CtaLinkStoryblok[];
  component: "oodSubMenu";
  _uid: string;
  [k: string]: any;
}

export interface OodSupportCardStoryblok {
  taxonomy?: (number | string)[];
  headline?: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"}>;
  backgroundColor?: number | string;
  iconStyle?: "far" | "fas" | "fab";
  extraIcon?: string;
  headingLevel?: number | string;
  component: "oodSupportCard";
  _uid: string;
  [k: string]: any;
}

export interface OodSupportPageStoryblok {
  bodyTitle?: string;
  srText?: string;
  undergraduateGroup?: any;
  undergraduate?: OodSupportCardStoryblok[];
  graduateGroup?: any;
  graduate?: OodSupportCardStoryblok[];
  artsGroup?: any;
  arts?: OodSupportCardStoryblok[];
  athleticsGroup?: any;
  athletics?: OodSupportCardStoryblok[];
  businessGroup?: any;
  business?: OodSupportCardStoryblok[];
  cultureGroup?: any;
  culture?: OodSupportCardStoryblok[];
  DEIGroup?: any;
  dei?: OodSupportCardStoryblok[];
  lawGroup?: any;
  law?: OodSupportCardStoryblok[];
  medicineGroup?: any;
  medicine?: OodSupportCardStoryblok[];
  scienceGroup?: any;
  science?: OodSupportCardStoryblok[];
  sustainabilityGroup?: any;
  sustainability?: OodSupportCardStoryblok[];
  teachingGroup?: any;
  teaching?: OodSupportCardStoryblok[];
  title?: string;
  intro?: RichtextStoryblok;
  headerBackgroundColor?: number | string;
  iconCardHeading?: string;
  iconCards?: OodIconCardStoryblok[];
  localHeader?: LocalHeaderPickerStoryblok[];
  localFooter?: LocalFooterPickerStoryblok[];
  globalFooter?: GlobalFooterPickerStoryblok[];
  belowContent?: SectionStoryblok[];
  alertPicker?: AlertPickerStoryblok[];
  noindex?: boolean;
  component: "oodSupportPage";
  _uid: string;
  [k: string]: any;
}

export interface OodTileCardStoryblok {
  image?: AssetStoryblok;
  showImage?: boolean;
  visibleHorizontal?: number | string;
  visibleVertical?: number | string;
  backgroundColor?: "white" | "lagunita" | "sky-dark" | "palo-alto" | "bay-dark";
  headingLevel?: number | string;
  superheadline?: string;
  headline?: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "oodTileCard";
  _uid: string;
  [k: string]: any;
}

export interface PageStoryblok {
  body?: (
    | AccordionStoryblok
    | AccordionItemStoryblok
    | AlertStoryblok
    | AlertPickerStoryblok
    | BasicCardStoryblok
    | ColumnGridStoryblok
    | ContentMenuParentItemStoryblok
    | ContentMenuPickerStoryblok
    | ContentNavItemStoryblok
    | ContentNestedMenuStoryblok
    | CountdownStoryblok
    | CountdownPickerStoryblok
    | CtaGroupStoryblok
    | CtaLinkStoryblok
    | CuratedStoriesStoryblok
    | EmbedScriptStoryblok
    | EmbedVideoStoryblok
    | EndowedPositionsSearchStoryblok
    | EndowedPositionsSearchPickerStoryblok
    | GlobalFooterStoryblok
    | GlobalFooterPickerStoryblok
    | GridThreeColumnsStoryblok
    | LocalFooterPickerStoryblok
    | LocalHeaderPickerStoryblok
    | LockupStoryblok
    | NavItemStoryblok
    | OodCampaignCardStoryblok
    | OodCampaignHeaderStoryblok
    | OodCampaignImpactStoryblok
    | OodCampaignImpactItemStoryblok
    | OodCampaignPageStoryblok
    | OodContentMenuStoryblok
    | OodGallerySlideStoryblok
    | OodGallerySlideshowStoryblok
    | OodHomepageHeroStoryblok
    | OodIconCardStoryblok
    | OodInteriorPageStoryblok
    | OodLandingPageStoryblok
    | OodLocalFooterStoryblok
    | OodLocalHeaderStoryblok
    | OodMegaMenuStoryblok
    | OodMegaMenuCardStoryblok
    | OodMegaMenuLinkGroupStoryblok
    | OodMegaMenuNavItemStoryblok
    | OodMegaMenuSectionStoryblok
    | OodPosterStoryblok
    | OodQuoteCardStoryblok
    | OodQuoteSliderStoryblok
    | OodStoryStoryblok
    | OodStoryCardStoryblok
    | OodSubMenuStoryblok
    | OodSupportCardStoryblok
    | OodSupportPageStoryblok
    | OodTileCardStoryblok
    | PageStoryblok
    | ProfessorshipTableStoryblok
    | RedirectStoryblok
    | RowOneColumnStoryblok
    | RowThreeColumnsStoryblok
    | RowTwoColumnsStoryblok
    | SearchOverlayStoryblok
    | SearchResultsStoryblok
    | SectionStoryblok
    | SingleColumnContentStoryblok
    | StoryImageStoryblok
    | StoryOverviewStoryblok
    | StoryPickerStoryblok
    | StoryTeaserStoryblok
  )[];
  component: "page";
  _uid: string;
  [k: string]: any;
}

export interface ProfessorshipTableStoryblok {
  component: "professorshipTable";
  _uid: string;
  [k: string]: any;
}

export interface RedirectStoryblok {
  from: string;
  to: string;
  statusCode?: string;
  enabled?: boolean;
  component: "redirect";
  _uid: string;
  [k: string]: any;
}

export interface RowOneColumnStoryblok {
  rowWidth?:
    | "flex-12-of-12"
    | "flex-lg-10-of-12"
    | "flex-lg-9-of-12"
    | "flex-lg-10-of-12 flex-xl-8-of-12"
    | "flex-md-10-of-12 flex-lg-8-of-12 flex-xl-6-of-12"
    | "flex-md-8-of-12 flex-lg-6-of-12 flex-xl-4-of-12";
  align?: "su-mx-auto" | "su-mr-auto" | "su-ml-auto";
  spacingBottom?: number | string;
  columnContent?: (
    | BasicCardStoryblok
    | OodIconCardStoryblok
    | OodTileCardStoryblok
    | OodSupportCardStoryblok
    | OodQuoteCardStoryblok
    | OodStoryCardStoryblok
    | StoryPickerStoryblok
    | StoryImageStoryblok
    | SingleColumnContentStoryblok
    | EmbedVideoStoryblok
    | CtaLinkStoryblok
    | OodQuoteSliderStoryblok
  )[];
  component: "rowOneColumn";
  _uid: string;
  [k: string]: any;
}

export interface RowThreeColumnsStoryblok {
  oneColumnMd?: boolean;
  contentAlignment?: "start" | "center" | "end" | "stretch";
  spacingBottom?: "" | "3" | "4" | "5" | "7";
  columnOneContent?: (
    | OodTileCardStoryblok
    | OodIconCardStoryblok
    | OodSupportCardStoryblok
    | BasicCardStoryblok
    | OodStoryCardStoryblok
    | StoryImageStoryblok
    | SingleColumnContentStoryblok
    | EmbedVideoStoryblok
    | OodCampaignCardStoryblok
  )[];
  columnTwoContent?: (
    | OodTileCardStoryblok
    | OodSupportCardStoryblok
    | OodIconCardStoryblok
    | BasicCardStoryblok
    | OodStoryCardStoryblok
    | StoryImageStoryblok
    | SingleColumnContentStoryblok
    | EmbedVideoStoryblok
    | OodCampaignCardStoryblok
  )[];
  columnThreeContent?: (
    | OodTileCardStoryblok
    | OodIconCardStoryblok
    | OodSupportCardStoryblok
    | BasicCardStoryblok
    | OodStoryCardStoryblok
    | StoryImageStoryblok
    | SingleColumnContentStoryblok
    | EmbedVideoStoryblok
    | OodCampaignCardStoryblok
  )[];
  component: "rowThreeColumns";
  _uid: string;
  [k: string]: any;
}

export interface RowTwoColumnsStoryblok {
  rowWidth?: "" | "flex-xl-10-of-12" | "flex-lg-10-of-12 flex-xl-8-of-12";
  widthRatio?: "" | "2-to-1" | "1-to-2";
  oneColumnMd?: boolean;
  contentAlignment?: number | string;
  align?: "su-mx-auto" | "su-ml-none" | "su-mr-none su-ml-auto";
  spacingBottom?: number | string;
  columnOneContent?: (
    | BasicCardStoryblok
    | OodTileCardStoryblok
    | OodIconCardStoryblok
    | OodSupportCardStoryblok
    | OodStoryCardStoryblok
    | StoryImageStoryblok
    | SingleColumnContentStoryblok
    | EmbedVideoStoryblok
    | OodCampaignCardStoryblok
  )[];
  columnTwoContent?: (
    | BasicCardStoryblok
    | OodTileCardStoryblok
    | OodIconCardStoryblok
    | OodSupportCardStoryblok
    | OodStoryCardStoryblok
    | SingleColumnContentStoryblok
    | StoryImageStoryblok
    | EmbedVideoStoryblok
    | OodCampaignCardStoryblok
  )[];
  component: "rowTwoColumns";
  _uid: string;
  [k: string]: any;
}

export interface SearchOverlayStoryblok {
  categoriesRightHeadline?: string;
  categoriesRightBox?: CtaLinkStoryblok[];
  categoriesLeftHeadline?: string;
  categoriesLeftBox?: CtaLinkStoryblok[];
  introduction?: string;
  categoriesHeadline?: string;
  emptySearchMessage?: string;
  suggestionsAmount?: string;
  component: "searchOverlay";
  _uid: string;
  [k: string]: any;
}

export interface SearchResultsStoryblok {
  noResultsErrorTitle?: string;
  noResultsErrorText?: string;
  emptySearchTitle?: string;
  emptySearchText?: string;
  suggestionsAmount: string;
  component: "searchResults";
  _uid: string;
  [k: string]: any;
}

export interface SectionStoryblok {
  backgroundColor?: "white" | "fog-light";
  sectionStylesGroup?: any;
  titleStyle?: ("ood-has-tab-before" | "su-italic")[];
  tabColor?: number | string;
  titleSize?: "su-mod-type-4" | "su-mod-type-5" | "su-mod-type-3";
  headingLevel?: "h2" | "h3" | "h4";
  campaignStyles?: any;
  isCenterAlign?: boolean;
  isSansSemibold?: boolean;
  sectionWidthSpacingGroup?: any;
  contentWidth?: "edge-to-edge" | "centered-container" | "flex-xl-10-of-12" | "flex-lg-10-of-12 flex-xl-8-of-12";
  spacingTop?: number | string;
  spacingBottom?: number | string;
  id?: string;
  title?: string;
  intro?: RichtextStoryblok;
  srOnlyHeader?: boolean;
  content?: (
    | ColumnGridStoryblok
    | RowThreeColumnsStoryblok
    | OodQuoteCardStoryblok
    | RowTwoColumnsStoryblok
    | BasicCardStoryblok
    | CuratedStoriesStoryblok
    | RowOneColumnStoryblok
    | SingleColumnContentStoryblok
    | EmbedScriptStoryblok
    | StoryImageStoryblok
    | AccordionStoryblok
    | EmbedVideoStoryblok
    | CtaGroupStoryblok
    | OodQuoteSliderStoryblok
    | OodGallerySlideshowStoryblok
    | OodCampaignImpactStoryblok
    | EndowedPositionsSearchPickerStoryblok
    | CountdownStoryblok
  )[];
  hideSection?: boolean;
  disableWrapping?: boolean;
  component: "section";
  _uid: string;
  [k: string]: any;
}

export interface SingleColumnContentStoryblok {
  spacingTop?: number | string;
  spacingBottom?: number | string;
  contentWidth?: "" | "flex-lg-8-of-12" | "flex-md-10-of-12 flex-lg-8-of-12 flex-2xl-7-of-12" | "fit-container";
  backgroundColor?: number | string;
  content?: RichtextStoryblok;
  component: "singleColumnContent";
  _uid: string;
  [k: string]: any;
}

export interface StoryImageStoryblok {
  spacingTop?: number | string;
  spacingBottom?: number | string;
  isCard?: boolean;
  backgroundColor?: number | string;
  captionAlign?: number | string;
  image?: AssetStoryblok;
  imageWidth?: "su-w-full" | "centered-container" | "su-w-story" | "su-w-inset" | "fit-container";
  visibleVertical?: number | string;
  caption?: RichtextStoryblok;
  component: "storyImage";
  _uid: string;
  [k: string]: any;
}

export interface StoryOverviewStoryblok {
  belowContent?: (SectionStoryblok | OodPosterStoryblok | BasicCardStoryblok)[];
  iconCardHeading?: string;
  iconCards?: OodIconCardStoryblok[];
  title?: string;
  intro?: RichtextStoryblok;
  stories?: (SectionStoryblok | CuratedStoriesStoryblok)[];
  localHeader?: LocalHeaderPickerStoryblok[];
  localFooter?: LocalFooterPickerStoryblok[];
  globalFooter?: GlobalFooterPickerStoryblok[];
  headerBackgroundColor?: number | string;
  alertPicker?: AlertPickerStoryblok[];
  noindex?: boolean;
  component: "storyOverview";
  _uid: string;
  [k: string]: any;
}

export interface StoryPickerStoryblok {
  story?: (ISbStoryData<OodStoryStoryblok> | string)[];
  storyTitleAdminUse?: string;
  imageGroup?: any;
  cardStylesGroup?: any;
  orientation?: "" | "horizontal";
  backgroundColor?: number | string;
  headingLevel?: number | string;
  hideImage?: boolean;
  visibleHorizontal?: number | string;
  visibleVertical?: number | string;
  component: "storyPicker";
  _uid: string;
  [k: string]: any;
}

export interface StoryTeaserStoryblok {
  title?: string;
  shortTitle?: string;
  teaser?: string;
  image?: AssetStoryblok;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "storyTeaser";
  _uid: string;
  [k: string]: any;
}
