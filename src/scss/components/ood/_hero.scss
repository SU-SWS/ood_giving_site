@charset "UTF-8";

.ood-hero-home {
  position: relative;
  height: 700px;
  border-bottom: 100px solid transparent; // To compensate for the CTA box bottom offset

  &__media {
    height: 100%;
  }

  &__media-wrapper {
    height: 100%;
  }

  &__image {
    height: 100%;
    object-fit: cover;
    object-position: center;
  }

  &__splash-text {
    @include serif;
    @include margin(null null 0);
    max-width: 600px;
    position: absolute;
    bottom: 0.3em;
    left: calc((100% - 1500px) / 2);
    font-weight: $su-font-regular;
    z-index: 100;
    text-shadow: rgba(0,0,0,0.6) 0 0 26px;
  }

  &__link {
    @include modular-spacing('padding', 3);
    position: absolute;
    bottom: -100px;
    color: $su-color-white;
    //right: calc((100% - 1500px) / 2);
    max-width: 466px;
    z-index: 90;
    text-decoration: none;
    font-weight: $su-font-regular;

    &:hover,
    &:focus {
      color: $su-color-white;
      transition: background-color 0.3s ease-out;
      background-color: $su-color-archway-dark;

      .ood-hero-home__cta-headline {
        text-decoration: underline;
      }

      .ood-hero-home__cta-text {
        &::after {
          background-color: $su-color-white;
        }
      }
    }
  }

  &__cta-headline {
    @include modular-typography(4);
    @include margin(null null 0.6em);
    font-weight: $su-font-regular;
  }

  &__cta-text {
    @include modular-typography(0);
    @include margin(null null 0);

    &::after {
      background-color: $su-color-white;
    }
  }

  .su-media__caption {
    //position: relative;
  }

  @each $key, $breakpoint in $su-grid-media {
    @if index($su-grid-media, ($key $breakpoint)) > 0 { // Breakpoint LG and larger
      $_edge: map-get($su-screen-margins, $key);

      &__link {
        @include grid-media($key) {
          right : $_edge;
        }
      }

      &__splash-text,
      .su-media__caption {
        @include grid-media($key) {
          left : $_edge;
        }
      }
    }
  }

  // For browser width larger than 1700px (1500 max center container width + 2 X max screen edges 100px each)
  @media only screen and (min-width: #{$su-screen-2xl + map_get($su-screen-margins, '2xl') * 2}) {
    $_max_width_edge: calc((100% - #{$su-site-max-width}) / 2);

    &__link {
      right: $_max_width_edge;
    }

    &__splash-text,
    .su-media__caption {
      left: $_max_width_edge;
    }
  }

}